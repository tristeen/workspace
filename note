1. adjust oom_score in linux. oom_score_adj range from -1000 to 1000.

	# cat /proc/981/oom_score
	18
	# echo -15 > /proc/981/oom_score_adj
	# cat /proc/981/oom_score
	3

2. adjust oom_core in android.
	Android的Low Memory Killer是在标准linux kernel的OOM（Out Of Memory）基础上修改而来的一种内存管理机制，当系统内存不足时，杀死Bad进程释放其内存。Bad进程的选择标准有两个：oom_adj和占用内存的大小。oom_adj代表进程的优先级，数值越大，优先级越高，对应每个oom_adj都有一个空闲内存的阈值。Android Kernel每隔一段时间会检查当前空闲内存是否低于某个阈值，如果是，则杀死oom_adj最大的Bad进程，如果有两个以上Bad进程oom_adj相同，则杀死其中占用内存最多的进程。
	OOM是标准linux Kernel的一种内存管理机制，Low Memory Killer在它基础上作了改进：
	(1) OOM基于多个标准给每个进程打分，分最高的进程将被杀死；Low Memory Killer则用oom_adj和占用内存的大小来选择Bad进程.
	(2) OOM在内存分配不足时调用，而Low Memory Killer每隔一段时间就会检查，一旦发现空闲内存低于某个阈值，则杀死Bad进程。
	Android将进程分为6个等级,它们按优先级顺序由高到低依次是:
	 
	  1.前台进程( FOREGROUND_APP)
	  2.可视进程(VISIBLE_APP )
	  3. 次要服务进程(SECONDARY_SERVER)
	  4.后台进程 (HIDDEN_APP)
	  5.内容供应节点(CONTENT_PROVIDER)
	  6.空进程(EMPTY_APP)
	
	对于放在/system/app下的应用，需要在其Manifest.xml文件中设置persistent属性，如应用程序'Phone'的AndroidManifest.xml文件：
	 
	  <application android:name="PhoneApp"
	                android:persistent="true"
	                android:label="@string/dialerIconLabel"
	                android:icon="@drawable/ic_launcher_phone">
	        ...
	   </application>
	设置后app提升为系统核心级别，任何情况下不会被kill掉,settings->applications里面也会屏蔽掉stop操作。

3.	echo f > /proc/sysrq-trigger # 马上出发内存溢出处理，杀掉1个Bad进程。
	当然还可以通过修改内核参数禁止OOM机制
	# sysctl -w vm.panic_on_oom=1
	vm.panic_on_oom = 1   //1表示关闭，默认为0表示开启OOM
	# sysctl -p

4.	./configure --with-pydebug
	up arrow失效的问题，是由于系统缺少readline.so。
	apt-get install libreadline-dev
